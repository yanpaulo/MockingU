@page
@model MockingU.Pages.ApiTemplates.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ApiTemplate</h4>
<hr />
<div class="row" id="app">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ApiTemplate.Id" />
            @foreach (var method in Model.ApiTemplate.Methods)
            {
                <input type="hidden" value="@method" class="hidden-method">
            }
            @foreach (var body in Model.ApiTemplate.Response.Contents)
            {
                <input type="hidden" value="@body" class="hidden-content">
            }
            <div class="form-group">
                <label asp-for="ApiTemplate.UrlPattern" class="control-label"></label>
                <input asp-for="ApiTemplate.UrlPattern" class="form-control" data-bs-toggle="popover" data-bs-trigger="focus hover" data-bs-html="true" data-bs-placement="right" title="Regex for url pattern after /mock/[usr] base url" 
                data-bs-content="
<ul>
    <li>Replace [url] by your username</li>
    <li>Sample Regex:</li>
    <ol>
        <li>^/$ for exactly /</li>
        <li>^/api/v1/sample/?$ for /api/v1/sample/ with or without an ending '/'</li>
        <li>bar for any url containing 'bar'</li>
    </ol>
    <li>Example URLs:</li>
    <ol>
        <li>/mock/[usr]/</li>
        <li>/mock/[usr]/api/v1/sample/</li>
        <li>/mock/[usr]/abc/bar/def</li>
    </ol>

</ul>"  />
                <span asp-validation-for="ApiTemplate.UrlPattern" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Methods</label>
                <div class="input-group">
                    <input v-model="method" class="form-control">
                    <button v-on:click="addMethod()" type="button" class="btn btn-outline-secondary">+</button>
                    <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="visually-hidden">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li v-for="method in defaultMethods">
                            <a class="dropdown-item" href="#" v-on:click="addMethod(method)">{{method}}</a>
                        </li>
                    </ul>
                </div>
                <ul class="list-inline">
                    <li class="list-inline-item" v-for="(method, i) in methods">
                        <span class="badge bg-info text-dark">{{method}}<button v-on:click="removeMethod(i)" type="button" class="btn-close" aria-label="Close"></button></span>
                        <input type="hidden" v-bind:name="`ApiTemplate.Methods[${i}]`" v-bind:value="method" />    
                    </li>
                </ul>
            </div>
            <div class="form-group">
                <label class="control-label">Contents</label>
                <div class="input-group">
                    <textarea v-model="content" class="form-control" rows="10"></textarea>
                    <button v-on:click="addContent()" class="btn btn-outline-secondary" type="button" id="button-addon2">+</button>
                </div>
                <div v-for="(content, i) in contents" class="input-group my-1">
                    <textarea v-model="contents[i]" v-bind:name="`ApiTemplate.Response.Contents[${i}]`" class="form-control" rows="10"></textarea>
                    <button v-on:click="removeContent(i)" class="btn btn-outline-secondary" type="button" id="button-addon2">X</button>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ApiTemplate.Response.ContentType" class="control-label"></label>
                <input asp-for="ApiTemplate.Response.ContentType" class="form-control" />
                <span asp-validation-for="ApiTemplate.Response.ContentType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApiTemplate.Response.StatusCode" class="control-label"></label>
                <input asp-for="ApiTemplate.Response.StatusCode" class="form-control" />
                <span asp-validation-for="ApiTemplate.Response.StatusCode" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
